openapi: 3.0.3
info:
  title: Swagger Ecocycle - OpenAPI 3.0
  description: |-
    Este es un servidor del sistema de reciclaje circular Ecocycle basado en la especificación OpenAPI 3.0. Puede obtener más información sobre Swagger en [https://swagger.io](https://swagger.io).
    
    Algunos enlaces útiles:
    - [Repositorio Ecocycle](https://github.com/thiago-laurence/DSSD/tree/feat/prod)
    - [Definición de API](https://github.com/thiago-laurence/DSSD/blob/feat/prod/openapi.yaml)
  version: 1.0.
servers:
  - url: https://django-app-aer5.onrender.com/ecocycle/api
tags:
  - name: Usuario
    description: Acceso al sistema
  - name: Pedido
    description: Administra los pedidos de materiales
  - name: Deposito
    description: Depositos globales
  - name: Centro
    description: Centros de acopio
paths:
  /pedidos:
    get:
      tags:
        - Pedido
      summary: Lista los pedidos realizados por los depositos
      description: Obtene la pagina indicada por el parametro enviado, en caso de no enviarlo, se retorna la primera pagina.
      operationId: getPedidoByPage
      parameters:
        - name: page
          in: query
          description: Numero de pagina de pedidos
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Listado de pedidos obtenido correctamente
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Page'
                - type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Pedido'
        '404':
          description: Página inválida
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []
  /pedidos/add:
    post:
      tags:
        - Pedido
      summary: Agrega un nuevo pedido de materiales
      description: Crea un nuevo pedido de materiales para los centros de acopio
      operationId: addPedido
      requestBody:
        description: Crea un nuevo pedido
        content:
          application/json:
            schema:
              required:
                - deposito
                - material
                - cantidad
                - fecha_solicitada
              type: object
              properties:
                deposito:
                  type: integer
                  format: int64
                  example: 57
                material:
                  type: string
                  description: Nombre del material
                  example: Acero
                cantidad:
                  type: string
                  example: "5.0"
                fecha_solicitada:
                  type: string
                  example: 2024-12-1
          application/x-www-form-urlencoded:
            schema:
              required:
                - deposito
                - material
                - cantidad
                - fecha_solicitada
              type: object
              properties:
                deposito:
                  type: integer
                  format: int64
                  example: 12
                material:
                  type: string
                  description: Nombre del material
                  example: Acero
                cantidad:
                  type: integer
                  format: int64
                  example: 18
                fecha_solicitada:
                  type: string
                  example: 2018-12-18
        required: true
      responses:
        '201':
          description: Pedido creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '400':
          description: El campo Cantidad debe ser decimal | El campo Fecha solicitada debe tener el formato YYYY-MM-DD
        '404':
          description: El campo Deposito o Material no existen sobre la consulta realizada
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []
  /login:
    post:
      tags:
        - Usuario
      summary: Iniciar sesion en el sistema
      description: 'Envia tus credenciales y recibi el token de acceso al sistema'
      operationId: loginUsuario
      requestBody:
        description: Crea un nuevo pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '201':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: El campo email es requerido, el campo password es requerido
        '401':
          description: No existe una cuenta activa con las credenciales enviadas
  /depositos/add:
    post:
      tags:
        - Deposito
      summary: Registra nuevos depositos globales
      description: 'Envia los datos del deposito a registrar'
      operationId: addDeposito
      requestBody:
        description: Crea un nuevo deposito global
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposito'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deposito'
        required: true
      responses:
        '201':
          description: El deposito fue registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El deposito fue registrado correctamente.
        '400':
          description: Nombre, dirección, email y password son campos obligatorios
        '409':
          description: El email del deposito ya fue registrado
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []
  /centros:
    get:
      tags:
        - Centro
      summary: Lista los centros de acopio que poseen al menos N cantidad de un X material.
      description: Obtene la pagina indicada por el parametro enviado, en caso de no enviarlo, se retorna la primera pagina.
      operationId: getCentrosByMaterialAndCantidad
      parameters:
        - name: page
          in: query
          description: Numero de pagina de centros
          required: false
          schema:
            type: integer
            format: int32
        - name: material
          in: query
          description: ID del material
          required: true
          schema:
            type: integer
            format: int32
        - name: cantidad
          in: query
          description: Cantidad del material
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Listado de centros obtenidos correctamente
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Page'
                - type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Centro'
        
        '400':
          description: El campo Cantidad debe ser un numero decimal
        '404':
          description: Página inválida
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []
components:
  schemas:
    Pedido:
      required:
        - id
        - deposito
        - material
        - cantidad
        - centro
        - fecha
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        deposito:
          $ref: '#/components/schemas/Deposito'
        material:
          $ref: '#/components/schemas/Material'
        centro:
          $ref: '#/components/schemas/Centro'
        cantidad:
          type: string
          example: "12.18"
        fecha:
          type: string
          description: Fecha de creacion del pedido de materiales
          example: 2024-10-11T10:39:40.904681Z
    Centro:
      required:
        - id
        - email
        - nombre
        - direccion
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        email:
          type: string
          description: Correo electronico del centro de acopio
          example: centro1@gmail.com
        nombre:
          type: string
          description: Nombre del centro de acopio
          example: Centro Plantese
        direccion:
          type: string
          description: Direccion del centro de acopio
          example: Calle falsa 123
        materiales:
          type: array
          items:
            properties:
              material:
                type: string
                example: Aluminio
              cantidad:
                type: string
                example: "4.0"
    Deposito:
      required:
        - email
        - password
        - direccion
        - nombre
      type: object
      properties:
        email:
          type: string
          description: Correo electronico del deposito global
          example: depocaba@gmail.com
        nombre:
          type: string
          description: Nombre del deposito
          example: Deposito CABA
        direccion:
          type: string
          description: Direccion del deposito
          example: Av. Corrientes
        password:
          type: string
          description: Contraseña del deposito
          example: 123
    Material:
      required:
        - id
        - nombre
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        nombre:
          type: string
          description: Nombre del material
          example: Acero
    Token:
      required:
        - access
        - refresh
      type: object
      properties:
        access:
          type: string
          description: Token de acceso
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ
        refresh:
          type: string
          description: Token de refresco
          example: OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
    Login:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          description: Email del usuario
          example: deposito1@example.com
        password:
          type: string
          description: Contraseña del usuario
          example: 123
    Page:
      type: object
      properties:
        count:
          type: integer
          format: int64
          example: 10
        previus:
          type: string
          example: null
        next:
          type: string
          example: https://django-app-aer5.onrender.com/ecocycle/api/pedidos?page=2
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
      